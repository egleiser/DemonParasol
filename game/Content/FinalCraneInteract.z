class FinalCraneInteract : ZilchComponent
{
    [Property]
    var ThrowForce:Real = 50000.0;
    var Player: Cog = null;
    var Boss: Cog = null;
    var Timer:Integer = 10;
    function Initialize(init : CogInitializer)
    {
        this.Player = this.Space.FindObjectByName("Player");
        this.Boss = this.Space.FindObjectByName("DivinerHandFinalBoss");
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnCollisionStarted(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        if(otherObject.Name == "Player" && this.Boss.AI_DivinerHand.AiState == DivHandState.Death && this.Owner.Model.Visible)
        {
            otherObject.PlayerController.ContextString = "Acceptance";
            var bKiller = this.Space.FindObjectByName("BossKillerDeath"); 
            if(bKiller != null)
            {
                bKiller.Destroy();
            }
        }
    }
    function OnCollisionEnded(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        if(otherObject.Name == "Player")
        {
            otherObject.PlayerController.ContextString = "";
            this.Timer = 0;
        }
    }
    function OnCollisionPersisted(event : CollisionEvent)
    {
        var otherObject = event.OtherObject;
        if(otherObject.Name == "Player" && this.Owner.Model.Visible)
        {
            this.Timer += 1;
            //Console.WriteLine(this.TextBox.TextBoxManager.Owner.Sprite.Color.W);
            if(this.Boss.AI_DivinerHand.AiState == DivHandState.Death &&
            (this.Player.InputController.Gamepad.IsButtonPressed(Buttons.A) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
            {
                Console.WriteLine("End Game");
                this.Space.CreateAtPosition(Archetype.Find("EndGameTextFont"), this.Owner.Transform.WorldTranslation);
                this.TeleportCrane();
            }
            if(this.Boss.AI_DivinerHand.AiState == DivHandState.Death)
            {
                otherObject.PlayerController.ContextString = "Acceptance";
            }
        }
    }
    function OnLogicUpdate(event : UpdateEvent)
    {
        this.Timer += 1;
        if(this.Timer > 10 &&
        (this.Player.InputController.Gamepad.IsButtonPressed(Buttons.A) || Zero.Keyboard.KeyIsPressed(Keys.Space)))
        {

        }
            if(this.Boss.AI_DivinerHand.AiState == DivHandState.Death)
            {
                this.Player.PlayerController.ContextString = "...";
            }
    }
    function TeleportCrane()
    {
            this.Space.SoundSpace.PlayCue(SoundCue.Find("Menu_Accept"));
            //var fadeEvent = new FadeToBlackEvent();
            //fadeEvent.EaseCurve = Ease.Linear;
            //fadeEvent.IsFadeIn = false;
            //fadeEvent.TimeToFade = 6.0;
            //this.LevelSettings.CameraViewport.Camera.DispatchEvent("fadeEvent", fadeEvent);
            var teleport = Action.Sequence(this.Owner.Actions);
            Action.Delay(teleport, 6.0);
            Action.Call(teleport, this.Teleport);
    }
    function Teleport()
    {
        this.LevelSettings.DataLoader.SaveFile.SaveData.LastLevel = this.Space.CurrentLevel.Name;
        this.LevelSettings.DataLoader.StoreSaveFile();
        //this.Space.LoadLevel(Level.Find("lvl_Credits"));
    }
}
