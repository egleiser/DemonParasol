class ZoomTester : ZilchComponent
{
    [Property]
    var ZoomTargetPath : CogPath = null;
    var ZoomTarget : Cog = null;
    
    var IsPanning : Boolean = false;
    var IsReturnPanning : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        this.ZoomTarget = this.ZoomTargetPath.Cog;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.H))
        {
            Console.WriteLine("Zooming In");
            Console.WriteLine("Zoom Object in Zoom Tester = `this.ZoomTarget`");
            var zoomEvent = new CameraZoomEvent();
            zoomEvent.IsZoomingIn = true;
            zoomEvent.CameraTarget = this.ZoomTarget;
            zoomEvent.CamSize = 8;
            zoomEvent.ZoomTime = 1.5;
            this.Space.FindObjectByName("Camera").DispatchEvent("zoomEvent", zoomEvent);
            
            
        }
        if(Zero.Keyboard.KeyIsPressed(Keys.J))
        {
            this.IsPanning = true;
            this.IsReturnPanning = false;
        }
        if(this.IsPanning)
        {
            var panEvent = new CameraPanEvent();
            panEvent.IsActive = true;
            panEvent.PanTarget = this.ZoomTarget;
            panEvent.PanTime = 1.0 * event.Dt;
            panEvent.EasingCurve = Ease.QuadInOut;
            this.Space.FindObjectByName("Camera").DispatchEvent("panEvent", panEvent);
        }
        if(Zero.Keyboard.KeyIsPressed(Keys.K))
        {
            this.IsPanning = false;
            this.IsReturnPanning = true;
        }
        if(this.IsReturnPanning)
        {
            var panEvent = new CameraPanEvent();
            panEvent.IsActive = false;
            panEvent.PanTime = 1.0 * event.Dt;
            this.Space.FindObjectByName("Camera").DispatchEvent("panEvent", panEvent);
        }
    }
}
