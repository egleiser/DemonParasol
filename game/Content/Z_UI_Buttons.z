/*//////////////////////////////////////////////////////////////////////////////////////////////////////////
//SCRIPT-Z_UI_Buttons.z
//AUTHOR-Travis Moore
//COURSE-GAM205
//COPYRIGHT-© 2014 DigiPen, All Rights Reserved.
//////////////////////////////////////////////////////////////////////////////////////////////////////////*/

//**********************REMOVE TEMP PLACEHOLDERS ON BTN SPRITES****************************************************

class Z_UI_Button:ZilchComponent
{
    //SPLASH
    var LvlSplashDigipen:Level = Level.Find("lvl_splash_digipen");
    var LvlSplashTeamLogo:Level = Level.Find("lvl_splash_team_logo");
    var LvlSplashStart:Level = Level.Find("lvl_splash_start");
    
    //MENUS
    var LvlMenuMain:Level = Level.Find("lvl_menu_main");
    var LvlMenuControls: Level = Level.Find("lvl_menu_controls");
    var LvlMenuCredits:Level = Level.Find("lvl_menu_credits");
    var LvlMenuPause:Level = Level.Find("lvl_menu_pause");
    var LvlMenuOptions:Level = Level.Find("lvl_menu_options");
    
    //GAMEOVER
    var LvlGameoverLose:Level = Level.Find("lvl_gameover_lose");
    var LvlGameoverWin:Level = Level.Find("lvl_gameover_win");
    
    //IN-GAME LEVELS
    var Lvl_01:Level = Level.Find("LevelSandbox");
    
    //CURRENT LEVEL
    var CurrentLevel:Level = null;
    
    //NEXT LEVEL
    [Property]
    var LevelToLoad:Level = null;
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-Initialize
    //EXPLANATION-Initialize variables/functions so that we can use them
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function Initialize(init : CogInitializer)
    {
        //mouse related events and their functions
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
        Zero.Connect(this.Owner, Events.MouseDown, this.OnMouseDown);
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnMouseEnter
    //EXPLANATION-Perform sprite swap to enchance player feedback
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnMouseEnter(event:ViewportMouseEvent):Void
    {
        //check to see what button we are by getting name
        var currentBtn:String = this.Owner.Name;
        
        //Next, if checks to swap out correct ACTIVE sprites
        
        //GAME BUTTONS
        //if button is "Start Game"
        if(currentBtn == "btn-game-start")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-start-game-active");
        }
        //if the button is "Resume Game
        if(currentBtn == "btn-game-resume")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui-game-resume-active");
        }
        //if button is "New Game"
        if(currentBtn == "btn-game-new")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-new-game-active");
        }
        //if button is "Quit Game"
        if(currentBtn == "btn-game-quit")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-quit-game-active");
        }
        //if button is "Quit Game"
        if(currentBtn == "btn-game-quit-white")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-quit-game-white-active");
        }
        //if button is "Quit Yes"
        if(currentBtn == "btn-yes")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-yes-active");
        }
        //if button is "Quit No"
        if(currentBtn == "btn-no")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-no-active");
        }
        
        //MENU BUTTONS
        //if button is "Menu Main"
        if(currentBtn == "btn-menu-main")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-main-active");
        }
        //if button is the RED "Menu Main"
        if(currentBtn == "btn-menu-main-red")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-main-red-active");
        }
        //if button is "Menu Options"
        if(currentBtn == "btn-menu-options")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-options-active");
        }
        //if button is "Menu Controls"
        if(currentBtn == "btn-menu-controls")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-controls-active");
        }
        //if button is "Menu Credits"
        if(currentBtn == "btn-menu-credits")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-credits-active");
        }
        
        //ARROW BUTTON
        //if button is "btn-arrow-left"
        if(currentBtn == "btn-arrow-left")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui_selectorarrow_red");
        }
        //if button is "btn-arrow-right"
        if(currentBtn == "btn-arrow-right")
        {
            this.Owner.Z_UI_Transitions.FadeInScaleUp();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui_selectorarrow_red");
        }
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnMouseExit
    //EXPLANATION-Undo original sprite swap to enhance player feedback
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnMouseExit(event:ViewportMouseEvent):Void
    {
        //check to see what button we are by getting name
        var currentBtn:String = this.Owner.Name;
        
        //Next, if checks to swap out correct INACTIVE sprites
        
        //GAME BUTTONS
        //if button is "Start Game"
        if(currentBtn == "btn-game-start")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-start-game-inactive");
        }
        //if the button is "Resume Game
        if(currentBtn == "btn-game-resume")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui-game-resume-inactive");
        }
        //if button is "New Game"
        if(currentBtn == "btn-game-new")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-new-game-inactive");
        }
        //if button is "Quit Game"
        if(currentBtn == "btn-game-quit")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-quit-game-inactive");
        }
        //if button is "Quit Game"
        if(currentBtn == "btn-game-quit-white")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-quit-game-white-inactive");
        }
        //if button is "Quit Yes"
        if(currentBtn == "btn-yes")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-yes-inactive");
        }
        //if button is "Quit No"
        if(currentBtn == "btn-no")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-no-inactive");
        }
        
        //MENU BUTTONS
        //if button is "Menu Main"
        if(currentBtn == "btn-menu-main")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-main-inactive");
        }
        //if button is the RED "Menu Main"
        if(currentBtn == "btn-menu-main-red")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-main-red-inactive");
        }
        //if button is "Menu Options"
        if(currentBtn == "btn-menu-options")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-options-inactive");
        }
        //if button is "Menu Controls"
        if(currentBtn == "btn-menu-controls")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-controls-inactive");
        }
        //if button is "Menu Credits"
        if(currentBtn == "btn-menu-credits")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("btn-menu-credits-inactive");
        }
        
        //ARROW BUTTON
        //if button is "btn-arrow-left"
        if(currentBtn == "btn-arrow-left")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui_selectorarrow_white");
        }
        //if button is "btn-arrow-right"
        if(currentBtn == "btn-arrow-right")
        {
            this.Owner.Z_UI_Transitions.ScaleNormal();
            this.Owner.Sprite.SpriteSource = SpriteSource.Find("ui_selectorarrow_white");
        }
    }
    
    /*//////////////////////////////////////////////////////////////////////////////////////////////////////
    //FUNCTION-OnMouseDown
    //EXPLANATION-Perform level loading
    //////////////////////////////////////////////////////////////////////////////////////////////////////*/
    function OnMouseDown(event:ViewportMouseEvent):Void
    {
        //check to see what button we are by getting name
        var currentBtn:String = this.Owner.Name;
        //grab the white fade out bg
        var fadeoutwhite = this.Space.FindObjectByName("bg-white");
        //find the main space, assign to variable
        var gameSpace = this.GameSession.FindSpaceByName("Main");
        
        //GAME BUTTONS
        //if button is "Start Game"
        if(this.Owner.Name == "btn-game-start")
        {
            fadeoutwhite.Z_UI_Transitions.FadeOutTo("MainMenu");
        }
        //if button is "Resume Game"
        if(this.Owner.Name == "btn-game-resume")
        {
            gameSpace.LevelSettings.QuickPause.TogglePauseMenu();
        }
        //if button is "New Game"
        if(this.Owner.Name == "btn-game-new")
        {
            this.Space.LoadLevel(this.LevelToLoad);
        }
        //if button is "Quit Game"
        if(this.Owner.Name == "btn-game-quit" )
        {
            this.Space.LevelSettings.Z_UI_MenuPopUp.DetermineDialogBox("QuitConfirmation");
        }
        //if button is "Quit Game"
        if(this.Owner.Name == "btn-game-quit-white" )
        {
            this.GameSession.Quit();
        }
        //if button is "Quit Yes"
        if(currentBtn == "btn-yes")
        {
            this.GameSession.Quit();
        }
        //if button is "Quit No"
        if(currentBtn == "btn-no")
        {
            this.Space.LevelSettings.Z_UI_MenuPopUp.FadeOut();
        }
        
        //MENU BUTTONS
        //if button is "Menu Main"
        if(this.Owner.Name == "btn-menu-main" || this.Owner.Name == "btn-menu-main-red")
        {
            if(fadeoutwhite != null)
            {
                fadeoutwhite.Z_UI_Transitions.FadeOutTo("MainMenu");
            }
            else
            {
                gameSpace.TimeSpace.TogglePause();
                gameSpace.LevelSettings.Z_LevelLogic.LoadMainMenu();
            }
        }
        if(this.Owner.Name == "btn-menu-options")
        {
            fadeoutwhite.Z_UI_Transitions.FadeOutTo("Options");
        }
        //if button is "Menu Controls"
        if(this.Owner.Name == "btn-menu-controls")
        {
            fadeoutwhite.Z_UI_Transitions.FadeOutTo("Controls");
        }
        //if button is "Menu Credits"
        if(this.Owner.Name == "btn-menu-credits")
        {
            fadeoutwhite.Z_UI_Transitions.FadeOutTo("Credits");
        }
        
        //ARROW BUTTON
        //if button is "btn-arrow-left"
        if(currentBtn == "btn-arrow-left")
        {
            //find the things we need and call their shift left
            this.Space.FindObjectByName("ui_howtoplay_keyboardmouse").Z_UI_Shift.ShiftOutLeft();
            this.Space.FindObjectByName("ui_text_keyboardmouse").Z_UI_Shift.ShiftOutLeft();
            this.Owner.Z_UI_Shift.ShiftOutLeft();
            
            //find the new things we need and call their shift left
            this.Space.FindObjectByName("ui_howtoplay_gamepad").Z_UI_Shift.ShiftInRight();
            this.Space.FindObjectByName("ui_text_gamepad").Z_UI_Shift.ShiftInRight();
            this.Space.FindObjectByName("btn-arrow-right").Z_UI_Shift.ShiftInRight();
        }
        //if button is "btn-arrow-right"
        if(currentBtn == "btn-arrow-right")
        {
            //find the things we need and call their shift right
            this.Space.FindObjectByName("ui_howtoplay_gamepad").Z_UI_Shift.ShiftOutRight();
            this.Space.FindObjectByName("ui_text_gamepad").Z_UI_Shift.ShiftOutRight();
            this.Owner.Z_UI_Shift.ShiftOutRight();
            
            //find the new things we need and call their shift left
            this.Space.FindObjectByName("ui_howtoplay_keyboardmouse").Z_UI_Shift.ShiftInLeft();
            this.Space.FindObjectByName("ui_text_keyboardmouse").Z_UI_Shift.ShiftInLeft();
            this.Space.FindObjectByName("btn-arrow-left").Z_UI_Shift.ShiftInLeft();
        }
    }
}
