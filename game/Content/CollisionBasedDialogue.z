class CollisionBasedDialogue : ZilchComponent
{
    [Property]
    var CollisionStart : Boolean = false;
    
    [Property]
    var CollisionEnd : Boolean = false;
    
    [Property]
    var DestroyCollider : Boolean = false;
    
    [Property]
    var DiagSegPath : CogPath = null;
    var DiagSeg : Cog = null;
    
    [Property]
    var ShouldFadeInOnStart : Boolean = false;
    
    var FadeInEventHasEnded : Boolean = false;
    
    var HasDialogueStarted : Boolean = false;
    
    var HudSpaceRef : Space = null;
    
    
    function Initialize(init : CogInitializer)
    {
        this.DiagSeg = this.DiagSegPath.Cog;
        
        this.HudSpaceRef = this.GameSession.FindSpaceByName("HudSpace");
        var textBox = this.HudSpaceRef.FindObjectByName("TextBox");
        this.HasDialogueStarted = textBox.TextBoxManager.DialogueStarted;
        
        Zero.Connect(this.Space, "fadeInEnded", this.FadeInEnded);
        Zero.Connect(this.Space, "dialogueFinished", this.OnDialogueFinished);
        Zero.Connect(this.Space, "dialogueStarted", this.OnDialogueStarted);
        
        if(this.CollisionStart)
        {
            Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        }
        if(this.CollisionEnd)
        {
            Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
        }
    }
    
    function OnCollisionStarted(event : CollisionEvent)
    {
        if(event.OtherObject.Name == "Player")
        {
            
            Console.WriteLine(this.Owner);
            
            var textBoxEvent = new TextBoxEvent();
            textBoxEvent.DialogueSegmentToUse = this.DiagSeg;
            textBoxEvent.DistanceOnScreen = -2.0;
            textBoxEvent.InOutTime = 0.5;
            textBoxEvent.EaseCurve = Ease.QuadOut;
            textBoxEvent.Opacity = 0.85;
            textBoxEvent.OpacityTimeIn = 0.5;
            textBoxEvent.OpacityEase = Ease.Linear;
            var levelSettings = this.Space.LevelSettings;
            var textBox = levelSettings.HudCreator.HudSpace.FindObjectByName("TextBox");
            textBox.DispatchEvent("startDialogue", textBoxEvent);
            
            if(this.DestroyCollider)
            {
                this.Owner.Destroy();
            }
            
        }
    }
    
    function OnCollisionEnded(event : CollisionEvent)
    {
        
    }
    
    function FadeInEventCall()
    {
        var fadeInSprite = this.GameSession.FindSpaceByName("HudSpace").FindObjectByName("FadeToBlackSprite");
        fadeInSprite.Sprite.Color = Real4(0,0,0,1);
        Console.WriteLine("Fade In EVent Occuring");
        var fadeInEvent = new FadeToBlackEvent();
        fadeInEvent.IsFadeIn = true;
        fadeInEvent.TimeToFade = 2.0;
        fadeInEvent.EaseCurve = Ease.QuadIn;
        this.Space.FindObjectByName("Camera").DispatchEvent("fadeEvent", fadeInEvent);
    }
    
    function FadeInEnded(event : FadeInEndedEvent)
    {
        this.FadeInEventHasEnded = true;
    }
    
    function ChangeFadeInFinishedBool()
    {
        this.FadeInEventHasEnded = true;
    }
    
    function OnDialogueFinished(event : DialogueEventFinished)
    {
        var introDiagCube = this.Space.FindObjectByName("IntroDiagCube1");
        Console.WriteLine("MEMEMEMEME");
        if(introDiagCube != null)
        {
            if(event.CurrentDialogueSegment.Name == this.Owner.CollisionBasedDialogue.DiagSegPath.Cog.Name)
            {
                foreach(var child in introDiagCube.Children)
                {
                    child.BoxCollider.Ghost = true;
                }
            }
        }
    }
    
    function OnDialogueStarted(event : DialogueStartedEvent)
    {
        
    }
}
