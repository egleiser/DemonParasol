//Written by: Eric Gleiser
//© 2015 DigiPen, All Rights Reserved.

[Pixel][AutoBlock]
class ShaderWavyFX
{
    // Custom Inputs
    [Input]
    var Texture : Sampler2d = null;
    [Input]
    var DistortionTexture : Sampler2d = null;
    [Input]
    var DistortIntensity : Real = 10;
    [Input]
    var Multiplier : Real = 10;
    [Input]
    var Scalar : Real2 = Real2(1,1);
    [Input]
    var WaveScalar : Real2 = Real2(1,1);
    //Built In
    // View Space Normal
    [Input]
    var Normal : Real3 = Real3();
    // Us from mesh
    [Input]
    var Uv : Real2 = Real2();
    // Time in seconds
    [Input]
    var Time : Real = 0.0;
    // Object color from model
    //[Input]
    //var ObjectColor : Real4 = Real4();
    // Position in view space
    [Input]
    var PixelPosition : Real3 = Real3();

    //Eye is at 0,0,0  
    
    //Color lit to the surface
    [Output]
    var SurfaceColor : Real4 = Real4();
    [Output]
    var Refraction : Real2 = Real2();
    function Main()
    {
        // Simple edge glow
        var offTime = this.Time + 5000;
        var sinWave = Math.Sin(offTime * (this.Uv.Y/100)) * 0.01 + 1;
        var newUV = Real2(this.Uv.X + (sinWave * this.DistortIntensity),this.Uv.Y + sinWave + this.Time/10);
        newUV += Real2(this.Time/this.DistortIntensity,0);
        newUV *= this.WaveScalar;
        var texColor = this.Texture.Sample(newUV);
        this.SurfaceColor = texColor * this.Multiplier;
        
        var bumpTex = 2.0 * this.DistortionTexture.Sample(newUV).XY - Real2(1.0,1.0);
        
        var newRef = (this.PixelPosition.XY/this.PixelPosition.Z) + bumpTex.XY * this.Scalar;
        this.Refraction = newRef;
    }
}
