//Written by: Eric Gleiser
//© 2015 DigiPen, All Rights Reserved.

[Pixel][AutoBlock]
class MaskedRefractionUV
{
   // Custom Inputs
    [Input]
    var EmissiveTexture : Sampler2d = null;
    [Input]
    var DistortionTexture : Sampler2d = null;
    [Input]
    var DistortionTexture2 : Sampler2d = null;
    [Input]
    var MaskTexture : Sampler2d = null;
    [Input]
    var Scalar : Real2 = Real2(0.0,0.0);
    [Input]
    var Scalar2 : Real2 = Real2(0.0,0.0);
    [Input]
    var TexScalar : Real2 = Real2(0.0,0.0);
    [Input]
    var Scroll : Real2 = Real2(0.0,0.0);
    [Input]
    var Scroll2 : Real2 = Real2(0.0,0.0);
    [Input]
    var TexScroll : Real2 = Real2(0.0,0.0);
    [Input]
    var Multiplier : Real = 1.0;
    [Input]
    var DistortionMultiplier : Real = 1.0;
    //Built In
    // View Space Normal
    [Input]
    var Normal : Real3 = Real3();
    // Us from mesh
    [Input]
    var Uv : Real2 = Real2();
    // Time in seconds
    [Input]
    var Time : Real = 0.0;
    // Object color from model
    [Input]
    var ObjectColor : Real4 = Real4();
    // Position in view space
    [Input]
    var PixelPosition : Real3 = Real3();
    [Input]
    var ScreenPosition : Real4 = Real4();
    //Eye is at 0,0,0  
    
    //Color added to the surface
    [Output]
    var Refraction : Real2 = Real2();
    
    //Surface effected by lighting
    [Output]
    var SurfaceColor : Real4 = Real4();
    
    function Main()
    {
        // Simple edge glow
        var timeVec = Real2(this.Time, this.Time) * this.Scroll;
        var bumpTex = 2.0 * this.DistortionTexture.Sample(this.Uv + timeVec).XY - Real2(1.0,1.0);
        bumpTex *= this.MaskTexture.Sample(this.Uv).XY;
        var newUv = ((this.PixelPosition.XY/this.PixelPosition.Z) + bumpTex.XY)  * this.Scalar;
        
        var timeVec2 = Real2(this.Time, this.Time) * this.Scroll2;
        var timeVec3 = Real2(this.Time, this.Time) * this.TexScroll;
        var bumpTex2 = 2.0 * this.DistortionTexture2.Sample((this.Uv * this.TexScalar) + timeVec2).XY - Real2(1.0,1.0);
        bumpTex2 *= this.DistortionMultiplier * bumpTex;
        var newUv2 =  bumpTex2.XY ;
        //var offsetVec = this.ScreenPosition.XY / this.TexScalar ;
        //this.TexScalar = this.Scalar2;
        var texColor = this.EmissiveTexture.Sample(newUv2 + ((this.Uv * this.TexScalar  ) + timeVec3));
        this.Refraction = newUv;
        this.SurfaceColor = texColor * this.Multiplier * this.ObjectColor;
    }
}
