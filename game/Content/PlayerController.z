class PlayerController : ZilchComponent
{
    var Active:Boolean = true;
    [Dependency]
    var Orientation: Orientation = null;
    
    [Dependency]
    var Transform: Transform = null;
    
    [Property]
    var MovmentSpeed:Real = 10.0;
    
    [Property]
    var RotateSpeed:Real = 25.0;
    
    [Property]
    var MaxMoveForce:Real = 10.0;
    
    [Property]
    var Deceleration:Real = 1.5;
    [Property]
    var CameraPath:CogPath = null;
    var MoveAngle:Real = 0;
    var Camera:Cog = null;
    
    
    
    var TargetList:Array[Cog] = new Array[Cog]();
    var TargetProximity:Array[Cog] = new Array[Cog]();
    var TargetIndex:Integer = 0;
    var TargetAngle:Real = 0;
    var Target:Cog = null;
    var TargetIndicator:Cog = null;
    var EnterTargetMode:Boolean = false;
    function Initialize(init : CogInitializer)
    {
        this.Owner.DynamicMotor.MaxMoveForce = this.MaxMoveForce;
        this.Camera = this.CameraPath.Cog;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.Active)
        {
            this.MovementUpdate(event);
            this.AttackUpdate(event);
            this.BlockUpdate(event);
        }
        this.ZTargetingUpdate(event);
        this.SwitchTargetUpdate(event);
    }
    function AttackUpdate(event : UpdateEvent)
    {
        if(this.Owner.InputController.Gamepad.IsButtonPressed(Buttons.X) || Zero.Keyboard.KeyIsPressed(Keys.Space))
        {
            var attackEvent = new AttackEvent();
            this.Owner.DispatchDown("attackEvent", attackEvent);
            this.Owner.DynamicMotor.MoveInDirection(this.Orientation.WorldForward * event.Dt * this.MovmentSpeed * 1000, this.Orientation.WorldUp);
        }
    }
    function BlockUpdate(event : UpdateEvent)
    {
        if(this.Owner.InputController.Gamepad.RightTrigger > 0.5 || Zero.Keyboard.KeyIsDown(Keys.F))
        {
            var blockEvent = new BlockEvent();
            this.Owner.DispatchDown("blockEvent", blockEvent);
            
        }
    }
    function ZTargetingUpdate(event : UpdateEvent)
    {
        this.TargetIndicator.IndicatorLock.Target = this.Target;
        if(this.Owner.InputController.Gamepad.LeftTrigger > 0.5 || Zero.Keyboard.KeyIsDown(Keys.V))
        {
            if(this.EnterTargetMode == false)
            {
                this.UpdateTargets();
                this.EnterTargetMode = true;
            }
            if(this.TargetProximity.Count > 0)
            {
                this.Target = this.TargetProximity.Get(this.TargetIndex);
            }
        }
        else
        {
            this.Target = null;
            this.TargetIndex = 0;
            this.EnterTargetMode = false;
        }
        
        if(this.Target != null)
        {
            var targetDistanceVec = this.Target.Transform.WorldTranslation - this.Owner.Transform.WorldTranslation;
            Math.Normalize(targetDistanceVec);
            this.TargetAngle = Math.ATan2(targetDistanceVec.Y,targetDistanceVec.X) - 1.57079633;
            this.MoveAngle = this.TargetAngle;
            this.Owner.Transform.Rotation = Math.Slerp(this.Owner.Transform.Rotation,Math.Euler(Real3(0.0,0.0,this.TargetAngle)),event.Dt*this.RotateSpeed);
        }
    }
    
    function UpdateTargets()
    {
        this.TargetProximity.Clear();
        foreach(var cog in this.TargetList )
        {
            if(cog != null)
            {
                if(cog.Targetable.GetDistanceToPlayer() < cog.Targetable.Range)
                {
                    this.TargetProximity.Add(cog);
                }
            }
        }
        this.TargetProximity.Sort(ObjectSorting.SortTargetByDistance);
        
    }
    
    function SwitchTargetUpdate(event : UpdateEvent)
    {
        this.NextTarget();
    }
    function NextTarget()
    {
        if(this.Owner.InputController.Gamepad.IsButtonPressed(Buttons.Y))
        {
            Console.WriteLine(this.TargetProximity);
            if(this.TargetIndex < this.TargetProximity.Count-1)
            {
                this.TargetIndex += 1;
            }
            else
            {
                this.TargetIndex = 0;
            }
        }
    }
    
    function MovementUpdate(event : UpdateEvent)
    {
        if(this.Owner.InputController.GetMovement() != Real3(0,0,0))
        {
            var cameraAngle= this.Camera.OrbitCameraController.CurrentAngle;
            
            if(this.Target == null)
            {
                this.MoveAngle = 0.0;
                this.MoveAngle = Math.ATan2(this.Owner.InputController.GetMovement().X,this.Owner.InputController.GetMovement().Y) + cameraAngle + 1.57079633;
                this.Owner.Transform.Rotation = Math.Slerp(this.Owner.Transform.Rotation,Math.Euler(Real3(0.0,0.0,this.MoveAngle)),event.Dt*this.RotateSpeed);
                this.Owner.FootstepDetector.Walk();
                this.Owner.DynamicMotor.MoveInDirection(this.Orientation.WorldForward * event.Dt * this.MovmentSpeed, this.Orientation.WorldUp);
            }
            else
            {
                this.Owner.FootstepDetector.Walk();
                this.Owner.DynamicMotor.MoveInDirection(
                 
                Real3(-this.Owner.InputController.GetMovement().X,this.Owner.InputController.GetMovement().Y,0) * 
                    event.Dt * this.MovmentSpeed, this.Orientation.WorldUp);
            }

        }
        else
        {
            this.Owner.DynamicMotor.MoveInDirection(Real3(0,0,0), this.Orientation.WorldUp);
            //Stablizes the player
            this.Owner.RigidBody.Velocity /= Real3(this.Deceleration,this.Deceleration,1);
        }
    }
}